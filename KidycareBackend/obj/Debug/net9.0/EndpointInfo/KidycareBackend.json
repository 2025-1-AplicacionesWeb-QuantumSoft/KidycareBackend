{
  "openapi": "3.0.4",
  "info": {
    "title": "KidycareBackend",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/authentication/sign-in": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign in",
        "description": "Sign in a user",
        "operationId": "SignIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SignInResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedUserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/authentication/sign-up": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign-up",
        "description": "Sign up a new user",
        "operationId": "SignUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was created successfully"
          }
        }
      }
    },
    "/api/v1/babysitter": {
      "post": {
        "tags": [
          "Babysitter"
        ],
        "summary": "Creates a Babysitter",
        "description": "Creates a specific Babysitter with.....",
        "operationId": "CreateBabysitterSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBabysitterResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBabysitterResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBabysitterResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Babysitter was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BabysitterResource"
                }
              }
            }
          },
          "400": {
            "description": "The Babysitter was not created."
          }
        }
      },
      "get": {
        "tags": [
          "Babysitter"
        ],
        "summary": "Get all babysitters",
        "description": "Retrieves a list of all babysitters available.",
        "operationId": "GetAllBabysitters",
        "responses": {
          "200": {
            "description": "Returns all available tutorials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BabysitterResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/babysitter/{id}": {
      "get": {
        "tags": [
          "Babysitter"
        ],
        "summary": "Get a Babysitter by ID",
        "description": "Retrieves a specific Babysitter using its unique identifier.",
        "operationId": "GetBabysitterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Babysitter was found and returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BabysitterResource"
                }
              }
            }
          },
          "404": {
            "description": "The Babysitter with the specified ID was not found."
          }
        }
      }
    },
    "/api/v1/cards/{CardId}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get Card by UserId",
        "description": "Retrieves a Card available in the KidyCare Platform.",
        "operationId": "GetCardById",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cards": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get all cards",
        "description": "Retrieves a list of all cards",
        "operationId": "GetAllCards",
        "responses": {
          "200": {
            "description": "Returns all available cards ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CardResource"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The profiles were not found"
          }
        }
      },
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Create a new card",
        "description": "Create a new card",
        "operationId": "CreateCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Card was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResource"
                }
              }
            }
          },
          "400": {
            "description": "The Card could not be created"
          }
        }
      }
    },
    "/api/v1/cards/{id}": {
      "put": {
        "tags": [
          "Cards"
        ],
        "summary": "Update a card by ID",
        "description": "Updates a specific card using its unique identifier.",
        "operationId": "UpdateCardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The card was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResource"
                }
              }
            }
          },
          "404": {
            "description": "The card with the specified ID was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete a card by ID",
        "description": "Deletes a specific card using its unique identifier.",
        "operationId": "DeleteCardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The card was successfully deleted."
          },
          "404": {
            "description": "The card with the specified ID was not found."
          }
        }
      }
    },
    "/api/v1/parent": {
      "post": {
        "tags": [
          "Parent"
        ],
        "summary": "Creates a Parent",
        "description": "Creates a specific Parent with.....",
        "operationId": "CreateParentSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParentResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParentResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParentResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Parent was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParentResource"
                }
              }
            }
          },
          "400": {
            "description": "The Parent was not created."
          }
        }
      }
    },
    "/api/v1/parent/{id}": {
      "get": {
        "tags": [
          "Parent"
        ],
        "summary": "Get a Parent by ID",
        "description": "Retrieves a specific Parent using its unique identifier.",
        "operationId": "GetParentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Parent was found and returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParentResource"
                }
              }
            }
          },
          "404": {
            "description": "The Parent with the specified ID was not found."
          }
        }
      }
    },
    "/api/v1/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get all payments",
        "description": "Retrieves a list of all Payments",
        "operationId": "GetAllPayment",
        "responses": {
          "200": {
            "description": "Returns all available Payments ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentResource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create a new Payment",
        "description": "Create a new Payment",
        "operationId": "CreatePayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Payment was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResource"
                }
              }
            }
          },
          "400": {
            "description": "The Payment could not be created"
          }
        }
      }
    },
    "/api/v1/payments/{PaymentId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get Payment by UserId",
        "description": "Retrieves a Card available in the KidyCare Platform.",
        "operationId": "GetPaymentByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PaymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a Payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "summary": "Creates a profile",
        "description": "Creates a new profile for a user",
        "operationId": "CreateProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfileResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfileResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfileResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The profile was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResource"
                }
              }
            }
          },
          "400": {
            "description": "The profile was not created"
          }
        }
      },
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Gets a profile based on query parameters",
        "description": "Query profile by API key or both API key and Source ID",
        "operationId": "GetProfileFromQuery",
        "parameters": [
          {
            "name": "profileApiKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile(s) found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/{id}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Get a profile by ID",
        "description": "Retrieves a specific profile using its unique identifier",
        "operationId": "GetProfileById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The profile was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reservation": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Creates a reservation",
        "description": "Creates a specific reservation with.....",
        "operationId": "CreateReservationSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The reservation was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResource"
                }
              }
            }
          },
          "400": {
            "description": "The reservation was not created."
          }
        }
      }
    },
    "/api/v1/reservation/{id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get a reservation by ID",
        "description": "Retrieves a specific reservation using its unique identifier.",
        "operationId": "GetReservationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The reservation was found and returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResource"
                }
              }
            }
          },
          "404": {
            "description": "The reservation with the specified ID was not found."
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update a reservation by ID",
        "description": "Updates a specific reservation using its unique identifier.",
        "operationId": "UpdateReservationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The reservation was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResource"
                }
              }
            }
          },
          "404": {
            "description": "The reservation with the specified ID was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Delete a reservation by ID",
        "description": "Deletes a specific reservation using its unique identifier.",
        "operationId": "DeleteReservationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The reservation was successfully deleted."
          },
          "404": {
            "description": "The reservation with the specified ID was not found."
          }
        }
      }
    },
    "/api/v1/reservation/babysitter/{babysitterId}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get all reservations by Babysitter ID",
        "description": "Retrieves a list of all reservations by Babysitter ID.",
        "operationId": "GetAllReservations",
        "parameters": [
          {
            "name": "babysitterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all available reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservationResource"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No reservations were found."
          }
        }
      }
    },
    "/api/v1/reservation/parent/{parentId}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get all reservations by Parent ID",
        "description": "Retrieves a list of all reservations by Parent ID.",
        "operationId": "GetAllReservations",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all available reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReservationResource"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No reservations were found."
          }
        }
      }
    },
    "/api/v1/review": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Crea una review",
        "description": "Crea una nueva review para un usuario",
        "operationId": "CreateReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La review fue creada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResource"
                }
              }
            }
          },
          "400": {
            "description": "La review no fue creada"
          }
        }
      },
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Consulta reviews por parámetros",
        "description": "Consulta reviews por ParentId o por BabysitterId",
        "operationId": "GetReviewsFromQuery",
        "parameters": [
          {
            "name": "parentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "babysitterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Se encontraron reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Obtiene una review por ID",
        "description": "Recupera una review usando su identificador único",
        "operationId": "GetReviewById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La review fue encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResource"
                }
              }
            }
          },
          "404": {
            "description": "No se encontró la review"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by its id",
        "description": "Get a user by its id",
        "operationId": "GetUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Get all users",
        "operationId": "GetAllUsers",
        "responses": {
          "200": {
            "description": "The users were found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResource"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticatedUserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BabysitterId": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BabysitterResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "languages": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "accountBank": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "typeAccountBank": {
            "type": "string",
            "nullable": true
          },
          "dni": {
            "type": "string",
            "nullable": true
          },
          "experienceLevel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolder": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CardResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolder": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBabysitterResource": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "languages": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "accountBank": {
            "type": "string",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "typeAccountBank": {
            "type": "string",
            "nullable": true
          },
          "dni": {
            "type": "string",
            "nullable": true
          },
          "experienceLevel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCardResource": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "cardHolder": {
            "type": "string",
            "nullable": true
          },
          "cvv": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateParentResource": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "preferences": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentResource": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "cardId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "reservationId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProfileResource": {
        "type": "object",
        "properties": {
          "profileApiKey": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "integer",
            "format": "int32"
          },
          "biography": {
            "type": "string",
            "nullable": true
          },
          "about": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateReservationResource": {
        "type": "object",
        "properties": {
          "babysitterId": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "childName": {
            "type": "string",
            "nullable": true
          },
          "childAge": {
            "type": "integer",
            "format": "int32"
          },
          "specialNeeds": {
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "notificationId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateReviewResource": {
        "type": "object",
        "properties": {
          "reviewApiKey": {
            "type": "string",
            "nullable": true
          },
          "reviewId": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "babysitterId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "NotificationId": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParentId": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ParentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          },
          "preferences": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "reservationId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProfileResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "experience": {
            "type": "integer",
            "format": "int32"
          },
          "biography": {
            "type": "string",
            "nullable": true
          },
          "about": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "profileApiKey": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservationDate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReservationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "$ref": "#/components/schemas/ParentId"
          },
          "babysitterId": {
            "$ref": "#/components/schemas/BabysitterId"
          },
          "startTime": {
            "$ref": "#/components/schemas/ReservationDate"
          },
          "endTime": {
            "$ref": "#/components/schemas/ReservationDate"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "childName": {
            "type": "string",
            "nullable": true
          },
          "childAge": {
            "type": "integer",
            "format": "int32"
          },
          "specialNeeds": {
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ReservationStatus"
          },
          "notificationId": {
            "$ref": "#/components/schemas/NotificationId"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReservationStatus": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReviewResource": {
        "type": "object",
        "properties": {
          "reviewApiKey": {
            "type": "string",
            "nullable": true
          },
          "reviewId": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "babysitterId": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SignInResource": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignUpResource": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReservationResource": {
        "type": "object",
        "properties": {
          "babysitterId": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "childName": {
            "type": "string",
            "nullable": true
          },
          "childAge": {
            "type": "integer",
            "format": "int32"
          },
          "specialNeeds": {
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "notificationId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "Cards",
      "description": "Operations available for card management on the KidyCare Platform."
    },
    {
      "name": "Payments",
      "description": "Operations available for Payment management on the KidyCare Platform."
    },
    {
      "name": "Authentication",
      "description": "Available Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "Available User endpoints"
    },
    {
      "name": "Cards",
      "description": "Operations available for card management on the KidyCare Platform."
    },
    {
      "name": "Payments",
      "description": "Operations available for Payment management on the KidyCare Platform."
    },
    {
      "name": "Authentication",
      "description": "Available Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "Available User endpoints"
    }
  ]
}